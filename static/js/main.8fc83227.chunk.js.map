{"version":3,"sources":["Components/ContactList/Contact.module.scss","Components/Contacts/Contacts.module.scss","Components/Layout/Layout.module.scss","Components/ContactForm/ContactForm.module.scss","Components/Layout/Layout.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Contacts/Contacts.js","Components/App/App.js","index.js","Components/Filter/Filter.module.scss"],"names":["module","exports","Layout","children","className","styles","ContactForm","state","name","number","handleChage","e","target","value","setState","hendleSubmit","preventDefault","props","onContactsAdd","reset","this","onSubmit","type","onChange","Component","ContactListItem","contact","deleteContacts","onClick","ContactList","tasks","map","key","id","Filter","onChangeFilter","findContact","contacts","find","item","toLowerCase","Contacts","filter","changeFilter","addContacts","contactFind","contactToAdd","uuidv4","alert","onDeleteContacts","contsctParsed","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","includes","getContacts","length","App","ReactDom","render","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,eAAe,8BAA8B,sBAAsB,qCAAqC,eAAe,8BAA8B,0BAA0B,yCAAyC,uBAAuB,wC,mBCAjQD,EAAOC,QAAU,CAAC,WAAW,2BAA2B,WAAW,6B,mBCAnED,EAAOC,QAAU,CAAC,OAAS,yB,sDCA3BD,EAAOC,QAAU,CAAC,eAAe,kCAAkC,aAAa,gCAAgC,aAAa,gCAAgC,cAAc,mC,6FCM5JC,EAJA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,yBAAKC,UAAWC,IAAOH,QAASC,I,kEC0DnBG,E,4MA1DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAc,SAACC,GAAO,IAAD,EACKA,EAAEC,OAAlBJ,EADW,EACXA,KAAMK,EADK,EACLA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAACJ,GACdA,EAAEK,iBACF,EAAKC,MAAMC,cAAX,eAA8B,EAAKX,QACnC,EAAKY,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CACZN,KAAM,GACNC,OAAQ,M,uDAIF,IAAD,EACkBW,KAAKb,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OAEd,OACE,0BAAMY,SAAUD,KAAKL,aAAcX,UAAWC,IAAO,iBACnD,2BAAOD,UAAWC,IAAO,eAAzB,OAEE,2BACEiB,KAAK,OACLd,KAAK,OACLK,MAAOL,EACPe,SAAUH,KAAKV,YACfN,UAAWC,IAAO,iBAGtB,2BAAOD,UAAWC,IAAO,eAAzB,SAEE,2BACEiB,KAAK,OACLd,KAAK,SACLK,MAAOJ,EACPc,SAAUH,KAAKV,YACfN,UAAWC,IAAO,iBAGtB,4BAAQD,UAAWC,IAAO,eAAgBiB,KAAK,UAA/C,oB,GAnDkBE,a,gBC8BXC,EA7BS,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,eAClC,OACE,wBAAKvB,UAAWC,IAAO,wBACvB,yBAAKD,UAAWC,IAAO,iBACrB,uBAAGD,UAAWC,IAAO,4BAClBqB,EAAQlB,KADX,KACkB,8BAAOkB,EAAQjB,SAEjC,4BACEa,KAAK,SACLM,QAASD,EACTvB,UAAWC,IAAO,yBAHpB,aCaSwB,EAnBK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,MAAOH,EAAqB,EAArBA,eAC5B,OACE,wBAAIvB,UAAWC,IAAO,iBACnByB,EAAMC,KAAI,SAAAL,GAAO,OAChB,kBAAC,EAAD,CACEM,IAAKN,EAAQO,GACbP,QAASA,EACTC,eAAgB,kBAAMA,EAAeD,EAAQO,Y,gBCaxCC,EArBA,SAAC,GAA+B,IAA7BrB,EAA4B,EAA5BA,MAAOsB,EAAqB,EAArBA,eACvB,OACE,yBAAK/B,UAAWC,IAAM,QACpB,2BAAOD,UAAWC,IAAO,iBAAzB,wBAEE,2BACEiB,KAAK,OACLT,MAAOA,EACPU,SAAU,SAACZ,GAAD,OAAOwB,EAAexB,EAAEC,OAAOC,QACzCT,UAAWC,IAAO,qB,yBCAtB+B,EAAc,SAACC,EAAUX,GAAX,OAClBW,EAASC,MAAK,SAAAC,GAAI,OAAIA,EAAK/B,KAAKgC,gBAAkBd,EAAQlB,KAAKgC,kBAiFlDC,E,4MA9EblC,MAAQ,CACN8B,SAAU,GAMVK,OAAQ,I,EAmBVC,aAAe,SAAAD,GACb,EAAK5B,SAAS,CAAE4B,Y,EAGlBE,YAAc,SAAAlB,GACZ,IAAMmB,EAAcT,EAAY,EAAK7B,MAAM8B,SAAUX,GAC/CoB,EAAY,2BACbpB,GADa,IAEhBO,GAAIc,iBAGFrB,EAAQlB,KACVqC,EACIG,MAAM,GAAD,OAAIH,EAAYrC,KAAhB,4BACL,EAAKM,UAAS,SAAAP,GAAK,MAAK,CACtB8B,SAAS,GAAD,mBAAM9B,EAAM8B,UAAZ,CAAsBS,QAGpCE,MAAM,uB,EAIVC,iBAAmB,SAAAhB,GACjB,EAAKnB,UAAS,SAAAP,GAAK,MAAK,CACtB8B,SAAU9B,EAAM8B,SAASK,QAAO,SAAAhB,GAAO,OAAIA,EAAQO,KAAOA,U,kEAvC5D,IAAMiB,EAAgBC,aAAaC,QAAQ,YAEvCF,GACF9B,KAAKN,SAAS,CACZuB,SAAUgB,KAAKC,MAAMJ,O,yCAKRK,EAAWC,GACxBA,EAAUnB,WAAajB,KAAKb,MAAM8B,UACpCc,aAAaM,QAAQ,WAAYJ,KAAKK,UAAUtC,KAAKb,MAAM8B,a,+BAgCrD,IAAD,EACsBjB,KAAKb,MAA1B8B,EADD,EACCA,SAAUK,EADX,EACWA,OACZiB,EAlEU,SAACtB,EAAUK,GAC7B,OAAOL,EAASK,QAAO,SAAAhB,GAAO,OAC5BA,EAAQlB,KAAKgC,cAAcoB,SAASlB,EAAOF,kBAgEnBqB,CAAYxB,EAAUK,GAC9C,OACE,6BACE,wBAAItC,UAAWC,IAAO,aAAtB,aACA,kBAAC,EAAD,CAAaa,cAAeE,KAAKwB,cAChCP,EAASyB,OAAS,GACjB,wBAAI1D,UAAWC,IAAO,aAAtB,YAEDgC,EAASyB,OAAS,GACjB,kBAAC,EAAD,CAAQjD,MAAO6B,EAAQP,eAAgBf,KAAKuB,eAE7CN,EAASyB,OAAS,GACjB,kBAAC,EAAD,CACEhC,MAAO6B,EACPhC,eAAgBP,KAAK6B,wB,GAvEVzB,aCJRuC,EARH,WACV,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,QCHNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U,kBCHjDnE,EAAOC,QAAU,CAAC,OAAS,uBAAuB,eAAe,6BAA6B,eAAe,gC","file":"static/js/main.8fc83227.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-list\":\"Contact_contact-list__1Ed2x\",\"contact-list__items\":\"Contact_contact-list__items__1RAnl\",\"contact-info\":\"Contact_contact-info__mf0Wu\",\"contact-info__paragraph\":\"Contact_contact-info__paragraph__2hgJ8\",\"contact-info__button\":\"Contact_contact-info__button__137a9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-h1\":\"Contacts_title-h1__GHqob\",\"title-h2\":\"Contacts_title-h2__2HgPp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Layout\":\"Layout_Layout__3IR62\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-form\":\"ContactForm_contact-form__3bLoY\",\"form-lable\":\"ContactForm_form-lable__1wvmf\",\"form-input\":\"ContactForm_form-input__uFsRv\",\"form-button\":\"ContactForm_form-button__3olDh\"};","import React from 'react';\r\nimport styles from './Layout.module.scss';\r\n\r\nconst Layout = ({ children }) => (\r\n  <div className={styles.Layout}>{children}</div>\r\n);\r\n\r\nexport default Layout;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChage = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  hendleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onContactsAdd({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.hendleSubmit} className={styles[\"contact-form\"]}>\r\n        <lable className={styles[\"form-lable\"]}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChage}\r\n            className={styles[\"form-input\"]}\r\n          />\r\n        </lable>\r\n        <lable className={styles[\"form-lable\"]}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChage}\r\n            className={styles[\"form-input\"]}\r\n          />\r\n        </lable>\r\n        <button className={styles[\"form-button\"]} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.scss\";\r\n\r\nconst ContactListItem = ({ contact, deleteContacts }) => {\r\n  return (\r\n    <li  className={styles[\"contact-list__items\"]}>\r\n    <div className={styles[\"contact-info\"]}>\r\n      <p className={styles[\"contact-info__paragraph\"]}>\r\n        {contact.name}: <span>{contact.number}</span>\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        onClick={deleteContacts}\r\n        className={styles[\"contact-info__button\"]}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n    </li>\r\n    \r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  deleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contact.module.scss';\r\n\r\nconst ContactList = ({ tasks, deleteContacts }) => {\r\n  return (\r\n    <ul className={styles['contact-list']}>\r\n      {tasks.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          deleteContacts={() => deleteContacts(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  deleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles[\"filter\"]}>\r\n      <label className={styles[\"filter-lable\"]}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          className={styles[\"filter-input\"]}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from 'react';\r\nimport ContactForm from '../ContactForm/ContactForm';\r\nimport ContactList from '../ContactList/ContactList';\r\nimport Filter from '../Filter/Filter';\r\nimport styles from '../Contacts/Contacts.module.scss';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst getContacts = (contacts, filter) => {\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n  );\r\n};\r\n\r\nconst findContact = (contacts, contact) =>\r\n  contacts.find(item => item.name.toLowerCase() === contact.name.toLowerCase());\r\n\r\nclass Contacts extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const contsctParsed = localStorage.getItem('contacts');\r\n\r\n    if (contsctParsed) {\r\n      this.setState({\r\n        contacts: JSON.parse(contsctParsed),\r\n      });\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.contacts !== this.state.contacts) {\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    }\r\n  }\r\n\r\n  changeFilter = filter => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  addContacts = contact => {\r\n    const contactFind = findContact(this.state.contacts, contact);\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    if (contact.name) {\r\n      contactFind\r\n        ? alert(`${contactFind.name} is already in contacts`)\r\n        : this.setState(state => ({\r\n            contacts: [...state.contacts, contactToAdd],\r\n          }));\r\n    } else {\r\n      alert('Input name please!');\r\n    }\r\n  };\r\n\r\n  onDeleteContacts = id => {\r\n    this.setState(state => ({\r\n      contacts: state.contacts.filter(contact => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = getContacts(contacts, filter);\r\n    return (\r\n      <div>\r\n        <h1 className={styles['title-h1']}>Phonebook</h1>\r\n        <ContactForm onContactsAdd={this.addContacts} />\r\n        {contacts.length > 0 && (\r\n          <h2 className={styles['title-h2']}>Contacts</h2>\r\n        )}\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            tasks={visibleContacts}\r\n            deleteContacts={this.onDeleteContacts}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport Layout from '../Layout/Layout';\r\nimport Contacts from '../Contacts/Contacts';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Layout>\r\n      <Contacts />\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './Components/App/App';\n\nReactDom.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1JNIo\",\"filter-lable\":\"Filter_filter-lable__2l2xU\",\"filter-input\":\"Filter_filter-input__2Y3av\"};"],"sourceRoot":""}