{"version":3,"sources":["Components/ContactList/Contact.module.scss","App.module.scss","Components/ContactForm/ContactForm.module.scss","Components/ContactForm/ContactForm.js","Components/ContactList/ContactListItem.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","App.js","index.js","Components/Filter/Filter.module.scss"],"names":["module","exports","ContactForm","state","name","number","handleChage","e","target","value","setState","hendleSubmit","preventDefault","props","onContactsAdd","reset","this","onSubmit","className","styles","type","onChange","Component","ContactListItem","contact","deleteContacts","onClick","ContactList","tasks","map","key","id","Filter","onChangeFilter","findContact","contacts","find","item","toLowerCase","App","filter","changeFilter","addContacts","contactFind","contactToAdd","uuidv4","alert","onDeleteContacts","contsctParsed","localStorage","getItem","JSON","parse","prevProps","prevState","setItem","stringify","visibleContacts","includes","getContacts","length","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.7987b6da.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-list\":\"Contact_contact-list__1Ed2x\",\"contact-list__items\":\"Contact_contact-list__items__1RAnl\",\"contact-info\":\"Contact_contact-info__mf0Wu\",\"contact-info__paragraph\":\"Contact_contact-info__paragraph__2hgJ8\",\"contact-info__button\":\"Contact_contact-info__button__137a9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title-h1\":\"App_title-h1__3fvXR\",\"title-h2\":\"App_title-h2__1o9xj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact-form\":\"ContactForm_contact-form__3bLoY\",\"form-lable\":\"ContactForm_form-lable__1wvmf\",\"form-input\":\"ContactForm_form-input__uFsRv\",\"form-button\":\"ContactForm_form-button__3olDh\"};","import React, { Component } from \"react\";\r\nimport styles from \"./ContactForm.module.scss\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChage = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  hendleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.onContactsAdd({ ...this.state });\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({\r\n      name: \"\",\r\n      number: \"\",\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n\r\n    return (\r\n      <form onSubmit={this.hendleSubmit} className={styles[\"contact-form\"]}>\r\n        <lable className={styles[\"form-lable\"]}>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChage}\r\n            className={styles[\"form-input\"]}\r\n          />\r\n        </lable>\r\n        <lable className={styles[\"form-lable\"]}>\r\n          Number\r\n          <input\r\n            type=\"text\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChage}\r\n            className={styles[\"form-input\"]}\r\n          />\r\n        </lable>\r\n        <button className={styles[\"form-button\"]} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Contact.module.scss\";\r\n\r\nconst ContactListItem = ({ contact, deleteContacts }) => {\r\n  return (\r\n    <li  className={styles[\"contact-list__items\"]}>\r\n    <div className={styles[\"contact-info\"]}>\r\n      <p className={styles[\"contact-info__paragraph\"]}>\r\n        {contact.name}: <span>{contact.number}</span>\r\n      </p>\r\n      <button\r\n        type=\"button\"\r\n        onClick={deleteContacts}\r\n        className={styles[\"contact-info__button\"]}\r\n      >\r\n        Delete\r\n      </button>\r\n    </div>\r\n    </li>\r\n    \r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  contact: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  deleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from 'react';\r\nimport ContactListItem from './ContactListItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Contact.module.scss';\r\n\r\nconst ContactList = ({ tasks, deleteContacts }) => {\r\n  return (\r\n    <ul className={styles['contact-list']}>\r\n      {tasks.map(contact => (\r\n        <ContactListItem\r\n          key={contact.id}\r\n          contact={contact}\r\n          deleteContacts={() => deleteContacts(contact.id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  tasks: PropTypes.arrayOf(PropTypes.shape({})).isRequired,\r\n  deleteContacts: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./Filter.module.scss\";\r\n\r\nconst Filter = ({ value, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles[\"filter\"]}>\r\n      <label className={styles[\"filter-lable\"]}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          className={styles[\"filter-input\"]}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChangeFilter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\r\nimport ContactForm from \"./Components/ContactForm/ContactForm\";\r\nimport ContactList from \"./Components/ContactList/ContactList\";\r\nimport Filter from \"./Components/Filter/Filter\";\r\nimport styles from \"./App.module.scss\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst getContacts = (contacts, filter) => {\r\n  return contacts.filter((contact) =>\r\n    contact.name.toLowerCase().includes(filter.toLowerCase())\r\n  );\r\n};\r\n\r\nconst findContact = (contacts, contact) =>\r\n  contacts.find(\r\n    (item) => item.name.toLowerCase() === contact.name.toLowerCase()\r\n  );\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  componentDidMount(){\r\n    const contsctParsed = localStorage.getItem('contacts');\r\n\r\n    if(contsctParsed){\r\n      this.setState({\r\n        contacts: JSON.parse(contsctParsed),\r\n      })\r\n    }\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState){\r\n    if(prevState.contacts !== this.state.contacts){\r\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts))\r\n\r\n    }\r\n  }\r\n\r\n  changeFilter = (filter) => {\r\n    this.setState({ filter });\r\n  };\r\n\r\n  addContacts = (contact) => {\r\n    const contactFind = findContact(this.state.contacts, contact);\r\n    const contactToAdd = {\r\n      ...contact,\r\n      id: uuidv4(),\r\n    };\r\n\r\n    if (contact.name) {\r\n      contactFind\r\n        ? alert(`${contactFind.name} is already in contacts`)\r\n        : this.setState((state) => ({\r\n            contacts: [...state.contacts, contactToAdd],\r\n          }));\r\n    } else {\r\n      alert(\"Input name please!\");\r\n    }\r\n  };\r\n\r\n  onDeleteContacts = (id) => {\r\n    this.setState((state) => ({\r\n      contacts: state.contacts.filter((contact) => contact.id !== id),\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { contacts, filter } = this.state;\r\n    const visibleContacts = getContacts(contacts, filter);\r\n    return (\r\n      <div>\r\n        <h1 className={styles[\"title-h1\"]}>Phonebook</h1>\r\n        <ContactForm onContactsAdd={this.addContacts} />\r\n        {contacts.length > 0 && (\r\n          <h2 className={styles[\"title-h2\"]}>Contacts</h2>\r\n        )}\r\n        {contacts.length > 1 && (\r\n          <Filter value={filter} onChangeFilter={this.changeFilter} />\r\n        )}\r\n        {contacts.length > 0 && (\r\n          <ContactList\r\n            tasks={visibleContacts}\r\n            deleteContacts={this.onDeleteContacts}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport App from './App';\n\nReactDom.render(\n  <App/>,\n  document.getElementById('root')\n);","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1JNIo\",\"filter-lable\":\"Filter_filter-lable__2l2xU\",\"filter-input\":\"Filter_filter-input__2Y3av\"};"],"sourceRoot":""}